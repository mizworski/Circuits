Zadanie 3

Program działa w dwóch etapach. W pierwszym sekwencyjnie, używając jedynie jednego wątka wczytuje wszystkie równania opisujące obwód, linia po linii. Po każdym pomyślnym wczytaniu, sprawdza czy w grafie zależności między zmiennymi nie powstał cykl. Obwód jest reprezentowany poprzez graf zależności między zmiennymi, który jest grafem skierowanym acyklicznym. Ponadto dla każdej zmiennej trzymam graf, który reprezentuje pojedynczy obwód, pozwalający później na utworzenie drzewa komunikujących się ze sobą procesów. Gdy po wczytaniu wszystkich linii opisujących cały obwód, obwód dalej będzie poprawny, to zaczyna się druga faza programu.
W drugim etapie wątek główny wczytuje listy inicjalizacyjne, po czym tworzy nowe procesy, które obsługują wczytaną linie. Po zakończeniu się dodatkowego procesu, wysyła on swoje rozwiązanie do wątku głownego, który z kolei wypisuje wynik. Po zakończeniu wszystkich dodatkowych procesów, wątek główny zwalnia zaalokowaną wcześniej pamięć i kończy się.
Dodatkowy proces obsługujący pojedynczą linię działa w sposób następujący. Inicjalizuje po jednym buforze dla każdej zmiennej (niezależnie czy będzie ona aktywna w wyliczaniu wartości x[0]), ilość tych buforów jest z góry zadana i jest to ilość wczytana na początku pierwszego etapu.
Następną rzeczą, która wykonuje dodatkowy proces jest sprawdzenie które zmienne będą aktywnie brały udział w wyliczaniu wartości x[0], a które wartości będą wartościami inicjalizującymi, tzn takie, które są zadane przez liste inicjalizacyjną. Wartości inicjalizacyjne są podzbiorem listy inicjalizacyjnej, lecz nie muszą być sobie równe, gdyż może zaistnieć sytuacja:
x[0] = x[1]
x[1] = x[2]
x[1] 2 x[2] 3
gdzie x[2] nie będzie w ogóle brała udziału w wyliczaniu wartości x[0]
Dla wartości inicjalizacyjnych, nasz dodatkowy wątek będzie od razu wkładał wartości z listy inicjalizacyjnej do buforu danej zmiennej.
Kolejną rzeczą jest utworzenie procesu obsługującego każdy z podobwodów, który odpowaida za wyliczenie zmiennej, która aktywnie będzie brała udział w wyliczeniu x[0], zalicza się do nich również x[0].
Z kolei ten dodatkowy proces, obsługujący wyliczanie danej zmiennej, będzie inicjalizował swój obwód, który jest drzewem i czekał na wyliczenie wartości swojej zmiennej, po czym wyśle swoją wartość do bufora swojej zmiennej. Gdy wszystkie procesy które utworzył się zakończą, to on również się zakończy. Owy dodatkowy proces wówczas utworzy wówczas bufor, do którego jego potomek włoży wartość jego zmiennej x[k], którą on będzie mógł włożyc do bufora wsyzstkich zmiennych.
Od teraz każdy proces będzie działał następująco: zamknie wcześniejsze bufory, z których nie będzie musiał już korzystać, po czym otworzy nowy bufor dla swoich potomków (lub potomka, lub będzie liściem w drzewie), zleci wyliczenie wartości, których potrzebuje do wyliczenia siebie nowym procesom, będzie czekał aż do obu buforów spłyną pożądane przez niego wartości, wykona na nich stosowne operacje oraz wyśle uzyskaną informacje do swojego przodka i po zakończeniu procesów potomnych sam się zakończy.
Jeśli taki proces nie potrzebuje tworzyć procesów potomnych, tzn wtedy gdy jest wartością lub inną zmienną, to w przypadku gdy jest wartością: wrzuca swoją wartość do bufora przodka i się kończy; w przypadku gdy jest zmienną to czeka na pokazanie się wartości danej zmiennej w buforze, czyta ją, wysyła do swojego potomka, po czym wrzuca tę wartość z powrotem na jej miejsce, aby umożliwić odczyt danej wartości przez inne obwody, np gdy wartość danej zmiennej musi zostać przeczytana przez wiele procesów.
Gdy całe drzewo zakończy swoje działanie, i proces zarządzający drzewem włoży wyliczoną wartość do odpowiedniego bufora zmiennej, kończy się.
Gdy proces zarządzający całym obwodem kończy się, to wówczas wysyła wyliczoną informacje do wątku głównego, po czym zamyka bufory wszystkich zmiennych i po zakończeniu procesów potomnych sam się kończy.

